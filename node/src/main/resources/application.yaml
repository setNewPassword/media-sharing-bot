server:
  port: ${PORT_NODE}

spring:
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST}
    port: ${SPRING_RABBITMQ_PORT}
    username: ${SPRING_RABBITMQ_USER}
    password: ${SPRING_RABBITMQ_PASSWORD}
    queues:
      text-message-update: ${SPRING_RABBITMQ_QUEUE_TEXT_MESSAGE_UPDATE}
      doc-message-update: ${SPRING_RABBITMQ_QUEUE_DOC_MESSAGE_UPDATE}
      photo-message-update: ${SPRING_RABBITMQ_QUEUE_PHOTO_MESSAGE_UPDATE}
      answer-message: ${SPRING_RABBITMQ_QUEUE_ANSWER_MESSAGE}
      registration-mail: ${SPRING_RABBITMQ_QUEUE_REGISTRATION_MAIL}
  datasource:
    url: jdbc:postgresql://${DB_NAME}:${PORT_DB}/${POSTGRES_DB}
    username: ${SPRING_RABBITMQ_USER}
    password: ${SPRING_RABBITMQ_PASSWORD}
  jpa:
    generate-ddl: true

bot:
  token: $BOT_TOKEN

service:
  file_info:
    uri: https://api.telegram.org/bot{token}/getFile?file_id={fileId}
  file_storage:
    uri: https://api.telegram.org/file/bot{token}/{filePath}

link:
  address: ${BOT_URI}:8086
salt: $SALT